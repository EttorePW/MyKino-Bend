-- MyKino PostgreSQL Database Setup Script
-- Execute this script directly in your PostgreSQL database

-- Drop existing tables (if they exist)
DROP TABLE IF EXISTS seat CASCADE;
DROP TABLE IF EXISTS bill CASCADE;
DROP TABLE IF EXISTS movie_plays_in CASCADE;
DROP TABLE IF EXISTS hall CASCADE;
DROP TABLE IF EXISTS movie CASCADE;
DROP TABLE IF EXISTS cinema CASCADE;
DROP TABLE IF EXISTS customer CASCADE;
DROP TABLE IF EXISTS users CASCADE;

-- Create tables with exact structure that Hibernate generates
CREATE TABLE cinema (
    max_halls integer not null,
    cinema_id bigint generated by default as identity,
    address varchar(255),
    manager varchar(255),
    name varchar(255),
    primary key (cinema_id)
);

CREATE TABLE customer (
    an_adult boolean not null,
    customer_id bigint generated by default as identity,
    address varchar(255),
    email varchar(255),
    first_name varchar(255),
    last_name varchar(255),
    phone varchar(255),
    primary key (customer_id)
);

CREATE TABLE movie (
    movie_version smallint check (movie_version between 0 and 2),
    premiered_at date,
    movie_id bigint generated by default as identity,
    image varchar(255),
    image_bkd varchar(255),
    main_character varchar(255),
    title varchar(255),
    video_id varchar(255),
    description TEXT,
    primary key (movie_id)
);

CREATE TABLE hall (
    capacity integer not null,
    occupied_seats integer not null,
    seat_price float(53) not null,
    cinema_id bigint,
    hall_id bigint generated by default as identity,
    screening_times TEXT,
    supported_movie_version varchar(255) check (supported_movie_version in ('D2D','R3D','DBOX')),
    primary key (hall_id)
);

CREATE TABLE movie_plays_in (
    hall_id bigint not null,
    movie_id bigint not null,
    primary key (hall_id, movie_id)
);

CREATE TABLE seat (
    col_number integer not null,
    hall_id integer not null,
    movie_id integer not null,
    premiered_at date,
    row_number integer not null,
    customer_id bigint,
    seat_id bigint generated by default as identity,
    cinema_name varchar(255),
    movie_name varchar(255),
    movie_version varchar(255) check (movie_version in ('D2D','R3D','DBOX')),
    reservation_date varchar(255),
    reservation_time varchar(255),
    primary key (seat_id)
);

CREATE TABLE bill (
    bill_date date,
    total_price float(53) not null,
    bill_id bigint generated by default as identity,
    customer_id bigint unique,
    customer_name varchar(255),
    primary key (bill_id)
);

CREATE TABLE users (
    user_id bigint generated by default as identity,
    confirm_password varchar(255),
    user_email varchar(255),
    user_first_name varchar(255),
    user_last_name varchar(255),
    user_password varchar(255),
    primary key (user_id)
);

-- Add foreign key constraints
ALTER TABLE hall ADD CONSTRAINT FKte75ikgkdmhfutuupvx2lhknr 
    FOREIGN KEY (cinema_id) REFERENCES cinema(cinema_id);

ALTER TABLE movie_plays_in ADD CONSTRAINT FK538rmb43glfuxym4alaqkoj4u 
    FOREIGN KEY (hall_id) REFERENCES hall(hall_id);

ALTER TABLE movie_plays_in ADD CONSTRAINT FKdjhc45v40cuf07eudnmm5tv5n 
    FOREIGN KEY (movie_id) REFERENCES movie(movie_id);

ALTER TABLE seat ADD CONSTRAINT fk_seat_customer 
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id);

ALTER TABLE bill ADD CONSTRAINT FKcdveik90g4pvk7m249scu73pg 
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id);

-- Insert sample data
-- Insert sample cinemas
INSERT INTO cinema (cinema_id, name, address, manager, max_halls) VALUES 
(1, 'CinePlex Wien', 'Wien, Österreich', 'Max Manager', 5),
(2, 'Mega Kino Berlin', 'Berlin, Deutschland', 'Anna Schmidt', 8),
(3, 'Star Cinema München', 'München, Deutschland', 'Peter Wagner', 6);

-- Insert sample movies (using correct column order)
INSERT INTO movie (movie_version, premiered_at, movie_id, image, image_bkd, main_character, title, video_id, description) VALUES 
(0, '2022-12-16', 1, 'https://image.tmdb.org/t/p/w500/t6HIqrRAclMCA60NsSmeqe9RmNV.jpg', 'https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/s16H6tpK2utvwDtzZ8Qy4qm5Emw.jpg', 'Jake Sully', 'Avatar: The Way of Water', 'o_WdFm9VuE4', 'Jake Sully lives with his newfound family formed on the extrasolar moon Pandora.'),
(2, '2022-05-27', 2, 'https://image.tmdb.org/t/p/w500/62HCnUTziyWcpDaBO2i1DX17ljH.jpg', 'https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/odJ4hx6g6vBt4lBWKFD1tI8WS4x.jpg', 'Pete Mitchell', 'Top Gun: Maverick', 'qSqVVswa420', 'After thirty years, Maverick is still pushing the envelope as a top naval aviator.'),
(1, '2021-12-17', 3, 'https://image.tmdb.org/t/p/w500/1g0dhYtq4irTY1GPXvft6k4YLjm.jpg', 'https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/14QbnygCuTO0vl7CAFmPf1fgZfV.jpg', 'Peter Parker', 'Spider-Man: No Way Home', 'JfVOs4VSpmA', 'Peter Parker is unmasked and no longer able to separate his normal life from the high-stakes of being a super-hero.');

-- Insert sample halls
INSERT INTO hall (hall_id, capacity, occupied_seats, supported_movie_version, seat_price, cinema_id, screening_times) VALUES 
(1, 120, 0, 'D2D', 12.50, 1, '["10:00", "13:00", "16:00", "19:00", "22:00"]'),
(2, 80, 0, 'DBOX', 14.00, 1, '["11:00", "14:00", "17:00", "20:00"]'),
(3, 150, 0, 'R3D', 11.50, 1, '["09:30", "12:30", "15:30", "18:30", "21:30"]'),
(4, 200, 0, 'D2D', 13.00, 2, '["10:30", "13:30", "16:30", "19:30", "22:30"]'),
(5, 100, 0, 'DBOX', 15.00, 2, '["11:30", "14:30", "17:30", "20:30"]'),
(6, 90, 0, 'R3D', 12.50, 2, '["10:15", "13:15", "16:15", "19:15", "22:15"]'),
(7, 110, 0, 'D2D', 12.00, 3, '["10:45", "13:45", "16:45", "19:45", "22:45"]'),
(8, 75, 0, 'DBOX', 14.50, 3, '["11:45", "14:45", "17:45", "20:45"]');

-- Insert movie-hall relationships
INSERT INTO movie_plays_in (movie_id, hall_id) VALUES 
(1, 1), (1, 4), (1, 7),
(2, 2), (2, 5), (2, 8),
(3, 3), (3, 6);

-- Insert sample customers
INSERT INTO customer (customer_id, first_name, last_name, email, an_adult) VALUES 
(1, 'Max', 'Mustermann', 'max.mustermann@email.com', true),
(2, 'Anna', 'Schmidt', 'anna.schmidt@email.com', true),
(3, 'Peter', 'Wagner', 'peter.wagner@email.com', false),
(4, 'Lisa', 'Bauer', 'lisa.bauer@email.com', true),
(5, 'Carlos', 'Rodriguez', 'carlos.rodriguez@email.com', true),
(6, 'Sophie', 'Mueller', 'sophie.mueller@email.com', true),
(7, 'Marco', 'Rossi', 'marco.rossi@email.com', true),
(8, 'Emma', 'Johnson', 'emma.johnson@email.com', false);

-- Insert sample seats (reserved seats)
INSERT INTO seat (seat_id, row_number, col_number, hall_id, movie_id, premiered_at, customer_id, cinema_name, movie_name, movie_version, reservation_date, reservation_time) VALUES 
-- Avatar: The Way of Water in Hall 1 (CinePlex Wien)
(1, 5, 8, 1, 1, '2022-12-16', 1, 'CinePlex Wien', 'Avatar: The Way of Water', 'D2D', '2025-08-22', '19:00'),
(2, 5, 9, 1, 1, '2022-12-16', 1, 'CinePlex Wien', 'Avatar: The Way of Water', 'D2D', '2025-08-22', '19:00'),
(3, 6, 12, 1, 1, '2022-12-16', 2, 'CinePlex Wien', 'Avatar: The Way of Water', 'D2D', '2025-08-22', '19:00'),
(4, 6, 13, 1, 1, '2022-12-16', 2, 'CinePlex Wien', 'Avatar: The Way of Water', 'D2D', '2025-08-22', '19:00'),

-- Top Gun: Maverick in Hall 2 (CinePlex Wien)
(5, 3, 5, 2, 2, '2022-05-27', 3, 'CinePlex Wien', 'Top Gun: Maverick', 'DBOX', '2025-08-23', '20:00'),
(6, 3, 6, 2, 2, '2022-05-27', 3, 'CinePlex Wien', 'Top Gun: Maverick', 'DBOX', '2025-08-23', '20:00'),
(7, 7, 10, 2, 2, '2022-05-27', 4, 'CinePlex Wien', 'Top Gun: Maverick', 'DBOX', '2025-08-23', '17:00'),

-- Spider-Man in Hall 3 (CinePlex Wien)
(8, 4, 7, 3, 3, '2021-12-17', 5, 'CinePlex Wien', 'Spider-Man: No Way Home', 'R3D', '2025-08-24', '15:30'),
(9, 4, 8, 3, 3, '2021-12-17', 5, 'CinePlex Wien', 'Spider-Man: No Way Home', 'R3D', '2025-08-24', '15:30'),
(10, 8, 15, 3, 3, '2021-12-17', 6, 'CinePlex Wien', 'Spider-Man: No Way Home', 'R3D', '2025-08-24', '18:30'),
(11, 8, 16, 3, 3, '2021-12-17', 6, 'CinePlex Wien', 'Spider-Man: No Way Home', 'R3D', '2025-08-24', '18:30'),

-- Avatar in Hall 4 (Mega Kino Berlin)
(12, 10, 5, 4, 1, '2022-12-16', 7, 'Mega Kino Berlin', 'Avatar: The Way of Water', 'D2D', '2025-08-25', '19:30'),
(13, 10, 6, 4, 1, '2022-12-16', 7, 'Mega Kino Berlin', 'Avatar: The Way of Water', 'D2D', '2025-08-25', '19:30'),
(14, 10, 7, 4, 1, '2022-12-16', 7, 'Mega Kino Berlin', 'Avatar: The Way of Water', 'D2D', '2025-08-25', '19:30'),

-- Top Gun in Hall 5 (Mega Kino Berlin)
(15, 6, 10, 5, 2, '2022-05-27', 8, 'Mega Kino Berlin', 'Top Gun: Maverick', 'DBOX', '2025-08-26', '20:30');

-- Insert sample bills
INSERT INTO bill (bill_id, customer_id, customer_name, bill_date, total_price) VALUES 
(1, 1, 'Max Mustermann', '2025-08-22', 25.00),
(2, 2, 'Anna Schmidt', '2025-08-22', 25.00),
(3, 3, 'Peter Wagner', '2025-08-23', 28.00),
(4, 4, 'Lisa Bauer', '2025-08-23', 14.00),
(5, 5, 'Carlos Rodriguez', '2025-08-24', 23.00),
(6, 6, 'Sophie Mueller', '2025-08-24', 23.00),
(7, 7, 'Marco Rossi', '2025-08-25', 39.00),
(8, 8, 'Emma Johnson', '2025-08-26', 15.00);

-- Reset sequences to start from the next available ID
SELECT setval('cinema_cinema_id_seq', (SELECT MAX(cinema_id) FROM cinema));
SELECT setval('movie_movie_id_seq', (SELECT MAX(movie_id) FROM movie));
SELECT setval('hall_hall_id_seq', (SELECT MAX(hall_id) FROM hall));
SELECT setval('customer_customer_id_seq', (SELECT MAX(customer_id) FROM customer));
SELECT setval('seat_seat_id_seq', (SELECT MAX(seat_id) FROM seat));
SELECT setval('bill_bill_id_seq', (SELECT MAX(bill_id) FROM bill));

-- Verification queries (optional - you can run these to verify the data)
/*
SELECT 'Cinemas' as table_name, count(*) as record_count FROM cinema
UNION ALL
SELECT 'Movies' as table_name, count(*) as record_count FROM movie
UNION ALL
SELECT 'Halls' as table_name, count(*) as record_count FROM hall
UNION ALL
SELECT 'Movie-Hall Relations' as table_name, count(*) as record_count FROM movie_plays_in
UNION ALL
SELECT 'Customers' as table_name, count(*) as record_count FROM customer
UNION ALL
SELECT 'Reserved Seats' as table_name, count(*) as record_count FROM seat
UNION ALL
SELECT 'Bills' as table_name, count(*) as record_count FROM bill;
*/
