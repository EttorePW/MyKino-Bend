# Production Configuration for Render
spring.application.name=Kino

# Server port (Render provides this via environment variable)
server.port=${PORT:8080}

# PostgreSQL Database Configuration (Render provides this)
# Convert postgresql:// to jdbc:postgresql:// format
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/kinodb}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.CharSet=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema-postgresql.sql
spring.sql.init.data-locations=classpath:data.sql
# Ensure tables are created with lowercase names
spring.jpa.properties.hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
spring.jpa.properties.hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Disable H2 console in production
spring.h2.console.enabled=false

# Swagger OpenAPI Configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

# Email Configuration (using environment variables)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# CORS Configuration for frontend
management.endpoints.web.cors.allowed-origins=${FRONTEND_URL:http://localhost:3000}
management.endpoints.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
management.endpoints.web.cors.allowed-headers=*

# Security Configuration (using environment variables)
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD}

# Actuator Configuration (for health checks)
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
management.health.db.enabled=true

# Logging
logging.level.com.codersbay.kino=INFO
logging.level.org.springframework.security=DEBUG
