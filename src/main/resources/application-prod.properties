# PostgreSQL Database Configuration for Production
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://dpg-d2isk6emcj7s73cqung0-a.oregon-postgres.render.com/mykino_database}
spring.datasource.username=${DATABASE_USERNAME:mykino_database_user}
spring.datasource.password=${DATABASE_PASSWORD:pG4MeDNSVcwsnl9YICaZY31gYXfSwSKc}
spring.datasource.driver-class-name=org.postgresql.Driver

# Server port (Render provides this via environment variable)
server.port=${PORT:8080}

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.sql.init.mode=never

# Swagger OpenAPI
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

# Email config
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME:ettore.pw@gmail.com}
spring.mail.password=${EMAIL_PASSWORD:yqzn oahn vouz aniz}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.requiered=true
